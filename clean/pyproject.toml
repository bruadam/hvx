[build-system]
requires = ["setuptools>=68.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "hvx"
version = "0.2.0"
description = "HVAC Analytics for Existing Buildings - Indoor Environmental Quality"
readme = "README.md"
requires-python = ">=3.10"
license = {text = "Proprietary License"}
authors = [
    {name = "HVX", email = "bruno.adam@pm.me"}
]
keywords = ["ieq", "analytics", "building", "environmental-quality", "compliance"]

classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

dependencies = [
    "pandas>=2.0.0",
    "numpy>=1.24.0",
    "pydantic>=2.0.0",
    "pyyaml>=6.0",
    "plotly>=5.14.0",
    "jinja2>=3.1.0",
    "click>=8.1.0",
    "rich>=13.0.0",
    "openpyxl>=3.1.0",  # Excel support
    "python-dateutil>=2.8.0",
]



[project.scripts]
ieq = "core.cli.main:cli"
hvx = "core.cli.main:cli"  # Backwards compatibility

[project.urls]
Homepage = "https://brunoadam.eu/"
Repository = "https://github.com/bruadam/hvx"

[tool.setuptools]
packages = ["core"]

[tool.setuptools.package-data]
core = ["py.typed"]

[tool.black]
line-length = 100
target-version = ['py310', 'py311', 'py312']
include = '\.pyi?$'

[tool.ruff]
line-length = 100
target-version = "py310"
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # line too long (handled by black)
    "B008",  # do not perform function calls in argument defaults
]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
strict_equality = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers"
]

[tool.coverage.run]
source = ["core"]
omit = ["*/tests/*", "*/__pycache__/*"]

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false
